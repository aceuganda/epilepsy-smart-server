{
    "swagger": "2.0",
    "info": {
      "title": "Epilepsy SMART backend API",
      "description": "Api for Epilepsy SMART server",
      "version": "1.0.0",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "basePath": "/",
    "paths": {
      "/users": {
        "get": {
          "tags": ["users"],
          "summary": "Gets all Users",
          "produces": ["application/json"],
          "parameters":[
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets Users"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": ["users"],
          "summary": "Sign up a new user",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "User params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/user_signup_credentials"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully signed up a new User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/users/{user_id}": {
        "get": {
          "tags": ["users"],
          "summary": "Gets a single user",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets a single User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": ["users"],
          "summary": "Updates user info",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "body",
              "name": "User params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/user"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/users/login": {
        "post": {
          "tags": ["users"],
          "summary": "Login User",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "User params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/user_login_credentials"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully Logged In User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/users/reset_password": {
        "post": {
          "tags": ["users"],
          "summary": "Reset User Password",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "User params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/user_login_credentials"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully Logged In User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/seizures/{user_id}": {
        "get": {
          "tags": ["seizures"],
          "summary": "Gets all Seizures per user",
          "produces": ["application/json"],
          "parameters":[
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets Seizures"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/seizures": {
        "post": {
          "tags": ["seizures"],
          "summary": "Enter a new seizure record",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "Seizure params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/seizure"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added seizure record"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/seizures/{seizure_id}": {
        "get": {
          "tags": ["seizure"],
          "summary": "Gets a single seizure detail",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "seizure_id",
              "required": true
            },
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully gets a single Seizure record"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
    },
    "/medications": {
      "post": {
        "tags": ["medication_records"],
        "summary": "Enter a new medication record",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Medication params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/medication"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully added medication record"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/medications/{medication_id}": {
      "get": {
        "tags": ["medication_records"],
        "summary": "Gets a single medication record's detail",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "medication_id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully gets a single medication record"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }},
      "/medicines": {
        "post": {
          "tags": ["medicine"],
          "summary": "Enter a new medicine record",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "Medicine params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/medicine"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added medicine record"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/medicines/{medicine_id}": {
        "get": {
          "tags": ["medicine"],
          "summary": "Gets a single medicine detail",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "medicine_id",
              "required": true
            },
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets a single Seizure record"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }}
    },
    "definitions": {
      "user_signup_credentials": {
        "type": "object",
        "required": ["username", "password", "email"],
        "properties": {
          "username": {
            "type": "string",
            "example": "user"
          },
          "email": {
            "type": "string",
            "example": "user@email.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "user_login_credentials": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "user@email.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "test user"
          },
          "email": {
            "type": "email",
            "example": "user@email.com"
          }
        }
      },
      "seizure": {
        "type": "object",
        "required": ["user_id", "seizure_severity", "seizure_duration", "seizure_time_of_day", "lost_awareness", "experienced_aura","was_seizure_triggered","seizure_impact","seizure_impact_upset_you" ],
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1
          },
          "seizure_severity": {
            "type": "string",
            "example": "mild/moderate/severe"
          },
          "seizure_duration": {
            "type": "string",
            "example": "2 hrs"
          }
          ,
          "seizure_time_of_day": {
            "type": "string",
            "example": "morning/aftenoon/night"
          }
          ,
          "lost_awareness": {
            "type": "boolean",
            "example": false
          },
          "experienced_aura": {
            "type": "boolean",
            "example": true
          },
          "aura_kind_experienced": {
            "type": "string",
            "example": "sweet smell/Deja-vu"
          },
          "was_seizure_triggered": {
            "type": "boolean",
            "example": true
          },
          "seizure_trigger": {
            "type": "string",
            "example": "free text"
          },
          "seizure_impact": {
            "type": "string",
            "example": "confused/sleepy"
          },
          "seizure_impact_upset_you": {
            "type": "number",
            "example": 0
          }
        }
      },
      "medication": {
        "type": "object",
        "required": ["user_id", "medicine_id", "took_medicine", "experienced_side_effects"],
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1
          },
          "medicine_id": {
            "type": "number",
            "example": 1
          },
          "took_medicine": {
            "type": "string",
            "example": "all doses/some doses/no doses"
          },
          "medicine_name": {
            "type": "string",
            "example": "panadol"
          },
          "experienced_side_effects": {
            "type": "boolean",
            "example": false
          },
          "side_effects_experienced": {
            "type": "string",
            "example": "Dizziness"
          }
        }
      },
      "medicine": {
        "type": "object",
        "required": ["user_id", "name"],
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "panadol"
          }
        }

    }
  }}