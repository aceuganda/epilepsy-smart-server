{
    "swagger": "2.0",
    "info": {
      "title": "Epilepsy SMART backend API",
      "description": "Api for Epilepsy SMART server",
      "version": "1.0.0",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "basePath": "/",
    "paths": {
      "/users": {
        "get": {
          "tags": ["users"],
          "summary": "Gets all Users",
          "produces": ["application/json"],
          "parameters":[
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets Users"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            }
            ,
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": ["users"],
          "summary": "Sign up a new user",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "User params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/user_signup_credentials"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully signed up a new User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/users/{user_id}": {
        "get": {
          "tags": ["users"],
          "summary": "Gets a single user",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets a single User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": ["users"],
          "summary": "Updates user info",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "body",
              "name": "User params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/user"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/users/login": {
        "post": {
          "tags": ["users"],
          "summary": "Login User",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "User params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/user_login_credentials"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully Logged In User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/users/reset_password": {
        "post": {
          "tags": ["users"],
          "summary": "Reset User Password",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "User params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/user_login_credentials"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully Logged In User"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/users/register_clinician": {
        "post": {
          "tags": ["clinicians"],
          "summary": "Register a clinician",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "User params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/user_login_credentials"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully registered clinician"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/seizures/{user_id}": {
        "get": {
          "tags": ["seizures"],
          "summary": "Gets all Seizures per user",
          "produces": ["application/json"],
          "parameters":[
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets Seizures"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            }
            ,
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/seizures": {
        "post": {
          "tags": ["seizures"],
          "summary": "Enter a new seizure record",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required":  true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "Seizure params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/seizure"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added seizure record"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/seizure/{seizure_id}": {
        "get": {
          "tags": ["seizures"],
          "summary": "Gets a single seizure detail",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "seizure_id",
              "required": true
            },
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets a single Seizure record"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
    },
    "/seizure/overview": {
      "get": {
        "tags": ["seizures"],
        "summary": "Gets all seizure records: Admin dashboard",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully gets all Seizure records"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/seizure/{user_id}/overview": {
      "get": {
        "tags": ["seizures"],
        "summary": "Gets all user seizure records : Admin dashboard",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully gets seizures"
          },
          "401": {
            "description": "Invalid input, object invalid"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Sserver error"
          }
        }
      }
    },
    "/seizure/{user_id}/metrics": {
      "get": {
        "tags": ["seizures"],
        "summary": "Gets the number of user seizures overtime : Admin dashboard",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get the number of user seizures"
          },
          "401": {
            "description": "Invalid input, object invalid"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Sserver error"
          }
        }
      }
    },
    "/medications": {
      "post": {
        "tags": ["medication_records"],
        "summary": "Enter a new medication record",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required":  true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Medication params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/medication"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully added medication record"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/medications/{user_id}": {
      "get": {
        "tags": ["medication_records"],
        "summary": "Get medication records for single user",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully gets medication records for single user"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/medications/{user_id}/missed_reasons": {
      "get": {
        "tags": ["medication_records"],
        "summary": "Get reasons for missing medication for single user",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully gets reasons for missing medication records for single user"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/medication/{medication_id}": {
      "get": {
        "tags": ["medication_records"],
        "summary": "Gets a single medication record's detail",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "medication_id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully gets a single medication record"
          },
          "401": {
            "description": "invalid input, object invalid"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }},
      "/medication/overview": {
        "get": {
          "tags": ["medication_records"],
          "summary": "Gets an overview of all medication records: : Admin dashboard",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required":  true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets an overview of all medication records"
            },
            "401": {
              "description": "Invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/medication/{user_id}/overview": {
        "get": {
          "tags": ["medication_records"],
          "summary": "Gets an overview of all medication records for a single user: : Admin dashboard",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "header",
              "name": "Authorization",
              "required":  true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets an overview of all medication records"
            },
            "401": {
              "description": "Invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/medicines": {
        "post": {
          "tags": ["medicine"],
          "summary": "Enter a new medicine record",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required":  true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "Medicine params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/medicine"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added medicine record"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "409": {
              "description": "Conflict - record already exists"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/medicines/{user_id}":{
        "get": {
          "tags": ["medicine"],
          "summary": "Gets all Medicines for a user",
          "produces": ["application/json"],
          "parameters":[
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets Medicines for single user"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            }
            ,
            "500": {
              "description": "Server error"
            }
          }
        }
      }
      ,
      "/medicine/{medicine_id}": {
        "get": {
          "tags": ["medicine"],
          "summary": "Gets a single medicine detail",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "medicine_id",
              "required": true
            },
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets a single Seizure record"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }},
        "/resiliences/{user_id}": {
          "get": {
            "tags": ["resilience_tracking"],
            "summary": "Gets all resilience records per user",
            "produces": ["application/json"],
            "parameters":[
              {
                "in": "header",
                "name": "Authorization",
                "required": true,
                "type": "string"
              },
              {
                "in": "path",
                "name": "user_id",
                "required": true
              }
            ],
            "responses": {
              "200": {
                "description": "Successfully gets Resilience records"
              },
              "401": {
                "description": "invalid input, object invalid"
              },
              "404": {
                "description": "Resource not found"
              },
              "500": {
                "description": "Server error"
              }
            }
          }
        },
        "/resilience": {
          "post": {
            "tags": ["resilience_tracking"],
            "summary": "Enter a new resilience record",
            "consumes": ["application/json"],
            "produces": ["application/json"],
            "parameters": [
              {
                "in": "header",
                "name": "Authorization",
                "required":  true,
                "type": "string"
              },
              {
                "in": "body",
                "name": "Resilience params",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/resilience"
                }
              }
            ],
            "responses": {
              "201": {
                "description": "Successfully added resilience record"
              },
              "401": {
                "description": "invalid input, object invalid"
              },
              "500": {
                "description": "Internal server error"
              }
            }
          }
        },
        "/resilience/{resilience_id}": {
          "get": {
            "tags": ["resilience_tracking"],
            "summary": "Gets a single resilience record detail",
            "produces": ["application/json"],
            "parameters": [
              {
                "in": "path",
                "name": "resilience_id",
                "required": true
              },
              {
                "in": "header",
                "name": "Authorization",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Successfully gets a single Resilience record"
              },
              "401": {
                "description": "invalid input, object invalid"
              },
              "404": {
                "description": "Resource not found"
              },
              "500": {
                "description": "Server error"
              }
            }
          }
      },
      "/resilience/feelings_overview": {
        "get": {
          "tags": ["resilience_tracking"],
          "summary": "Gets resilence graph data on feelings: Admin dashboard",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets all Resilience feelings records"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/resilience/{user_id}/feelings_overview": {
        "get": {
          "tags": ["resilience_tracking"],
          "summary": "Gets resilence graph data for user on feelings: Admin dashboard",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets all Resilience feelings records"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/resilience/{user_id}/social_engagement": {
        "get": {
          "tags": ["resilience_tracking"],
          "summary": "Gets resilence graph data for user social engagement: Admin dashboard",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets all Resilience social engagement records"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/resilience/{user_id}/peer_treatment": {
        "get": {
          "tags": ["resilience_tracking"],
          "summary": "Gets resilence graph data for user treatment by others: Admin dashboard",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets all Resilience: treatment by others records"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/resilience/{user_id}/feelings": {
        "get": {
          "tags": ["resilience_tracking"],
          "summary": "Gets a list of feelings of a user over a month",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets reasons for missing medication records for single user"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/resilience/{user_id}/social_engagement_activities": {
        "get": {
          "tags": ["resilience_tracking"],
          "summary": "Gets a list of a user's social engagement activities",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets social engagement activities for single user"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/roles":{
        "get": {
          "tags": ["roles"],
          "summary": "Gets all Roles",
          "produces": ["application/json"],
          "parameters":[
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets Roles"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            }
            ,
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": ["roles"],
          "summary": "Create a new role",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "Role params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/role"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully created a new role"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Server error"
            }
          }
        }

      },
      "/roles/{role_id}":{
        "get": {
          "tags": ["roles_detail"],
          "summary": "Gets a single role",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "role_id",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets a single Role"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": ["roles_detail"],
          "summary": "Updates roles info",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "role_id",
              "required": true
            },
            {
              "in": "body",
              "name": "Role params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/role"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates existing Role"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": ["roles_detail"],
          "summary": "Delete a role",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "role_id",
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully deleted role"
            },
            "400": {
              "description": "Bad request"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }

      },
      "/user/{user_id}/roles":{
        "post": {
          "tags": ["user_roles"],
          "summary": "add a user role",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "body",
              "name": "User role params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/user_role"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully adds user role"
            },
            "400": {
              "description": "Bad request"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "get": {
          "tags": ["user_roles"],
          "summary": "Gets user role",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets user role"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "patch": {
          "tags": ["user_roles"],
          "summary": "Updates user role",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "body",
              "name": "User role params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/user_role"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully updates user Role"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": ["user_roles"],
          "summary": "Delete a user role",
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            },
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "body",
              "name": "User role params",
              "required": false,
              "schema": {
                "$ref": "#/definitions/user_role"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully deleted role"
            },
            "400": {
              "description": "Bad request"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/gratefuls": {
        "post": {
          "tags": ["gratefuls"],
          "summary": "Enter a new grateful record",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required":  true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "Gratefuls params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/gratefuls"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added grateful record"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/gratefuls/{user_id}":{
        "get": {
          "tags": ["gratefuls"],
          "summary": "Gets all Gratefuls for a user",
          "produces": ["application/json"],
          "parameters":[
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets Gratefuls for single user"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/journals/{user_id}":{
        "get": {
          "tags": ["joournals"],
          "summary": "Gets all journals for a user",
          "produces": ["application/json"],
          "parameters":[
            {
              "in": "path",
              "name": "user_id",
              "required": true
            },
            {
              "in": "header",
              "name": "Authorization",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully gets journals for single user"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "404": {
              "description": "Resource not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/journals": {
        "post": {
          "tags": ["journals"],
          "summary": "Enter a new journals record",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "required":  true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "Journal params",
              "required": true,
              "schema": {
                "$ref": "#/definitions/journal"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successfully added journal record"
            },
            "401": {
              "description": "invalid input, object invalid"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      }
    },
    "definitions": {
      "user_signup_credentials": {
        "type": "object",
        "required": ["username", "password", "email", "dob", "gender", "age_of_onset", "seizure_type", "caregiver_name", "caregiver_contact", "institution", "profileImage"],
        "properties": {
          "username": {
            "type": "string",
            "example": "user"
          },
          "email": {
            "type": "string",
            "example": "user@email.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "dob": {
            "type": "string",
            "example": "2020-01-12"
          },
          "gender": {
            "type": "string",
            "example": "male/female"
          },
          "age_of_onset": {
            "type": "integer",
            "example": 13
          },
          "seizure_type": {
            "type": "string",
            "example": "Tonic/Atonic/MyoClonic/Clonic"
          },
          "caregiver_name": {
            "type": "string",
            "example": "Justin Beiber"
          },
          "caregiver_contact": {
            "type": "string",
            "example": "0700123456"
          },
          "institution": {
            "type": "string",
            "example": "Makerere Univerity"
          },
          "profileImage": {
            "type": "string",
            "example": ""
          }
        }
      },
      "user_login_credentials": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "user@email.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "test user"
          },
          "email": {
            "type": "email",
            "example": "user@email.com"
          }
        }
      },
      "seizure": {
        "type": "object",
        "required": ["user_id", "seizure_severity", "seizure_duration", "seizure_time_of_day", "lost_awareness", "experienced_aura","was_seizure_triggered","seizure_impact","seizure_impact_upset_you" ],
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1
          },
          "seizure_severity": {
            "type": "string",
            "example": "mild/moderate/severe"
          },
          "seizure_duration": {
            "type": "string",
            "example": "2 hrs"
          }
          ,
          "seizure_time_of_day": {
            "type": "string",
            "example": "morning/afternoon/night"
          }
          ,
          "lost_awareness": {
            "type": "boolean",
            "example": false
          },
          "experienced_aura": {
            "type": "boolean",
            "example": true
          },
          "aura_kind_experienced": {
            "type": "string",
            "example": "sweet smell/Deja-vu"
          },
          "was_seizure_triggered": {
            "type": "boolean",
            "example": true
          },
          "seizure_trigger": {
            "type": "string",
            "example": "free text"
          },
          "seizure_impact": {
            "type": "string",
            "example": "confused/sleepy"
          },
          "seizure_impact_upset_you": {
            "type": "number",
            "example": 0
          }
        }
      },
      "resilience": {
        "type": "object",
        "required": ["user_id", "treatment_scale_by_other", "engaged_socially_today","type_of_feelings","feelings_experienced","reason_for_feelings"],
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1
          },
          "treatment_scale_by_other": {
            "type": "number",
            "example": 0
          },
          "engaged_socially_today": {
            "type": "boolean",
            "example": true
          },
          "engagement_activities": {
            "type": "string",
            "example": ["School", "Family Visits"]
          }
          ,
          "type_of_feelings": {
            "type": "string",
            "example": "Positive/Negative"
          }
          ,
          "feelings_experienced": {
            "type": "string",
            "example": ["happy", "grateful", "joyful"]
          },
          "reason_for_feelings": {
            "type": "string",
            "example": "Acomplished goals"
          }
        }
      },
      "medication": {
        "type": "object",
        "required": ["user_id", "medicine_id", "took_medicine", "experienced_side_effects"],
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1
          },
          "medicine_id": {
            "type": "number",
            "example": 1
          },
          "took_medicine": {
            "type": "string",
            "example": "all doses/some doses/no doses"
          },
          "reason_missed_dose": {
            "type": "string",
            "example": "I forgot to refill the doses"
          },
          "medicine_name": {
            "type": "string",
            "example": "panadol"
          },
          "experienced_side_effects": {
            "type": "boolean",
            "example": false
          },
          "side_effects_experienced": {
            "type": "string",
            "example": "Dizziness"
          }
        }
      },
      "medicine": {
        "type": "object",
        "required": ["user_id", "name"],
        "properties": {
          "user_id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "panadol"
          }
        }

    },
    "role": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "example": "app_user/clinician"
        }
      }
  },
  "user_role": {
    "type": "object",
    "required": ["role_id"],
    "properties": {
      "role_id": {
        "type": "number",
        "example": 1
      }
    }
  },
  "gratefuls": {
    "type": "object",
    "required": ["user_id", "grateful"],
    "properties": {
      "user_id": {
        "type": "number",
        "example": 1
      },
      "grateful": {
        "type": "string",
        "example": "I am grateful to always have food to eat when I want it"
      }
    }
  },
  "journal": {
    "type": "object",
    "required": ["user_id", "title", "notes"],
    "properties": {
      "user_id": {
        "type": "number",
        "example": 1
      },
      "title": {
        "type": "string",
        "example": "Journal 1"
      },
      "notes": {
        "type": "string",
        "example": "Ounce upon a time, there was rain.."
      }
    }
  }
  }}
